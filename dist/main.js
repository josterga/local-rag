(()=>{"use strict";var e={d:(t,i)=>{for(var n in i)e.o(i,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:i[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{default:()=>r});const i=require("obsidian");var n=function(e,t,i,n){return new(i||(i=Promise))(function(s,o){function r(e){try{l(n.next(e))}catch(e){o(e)}}function a(e){try{l(n.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?s(e.value):(t=e.value,t instanceof i?t:new i(function(e){e(t)})).then(r,a)}l((n=n.apply(e,t||[])).next())})};const s="rag-chat-view",o={ollamaUrl:"http://localhost:11434",llmModel:"",embeddingModel:"",maxContextTokens:700,llmOptions:[],embeddingOptions:[]};class r extends i.Plugin{onload(){return n(this,void 0,void 0,function*(){yield this.loadSettings(),yield this.refreshModelOptions(),this.registerView(s,e=>new l(e,this)),this.addCommand({id:"open-rag-chat",name:"Open RAG Chat",callback:()=>this.activateView()}),this.addSettingTab(new d(this.app,this)),this.app.workspace.onLayoutReady(()=>this.activateView())})}onunload(){this.app.workspace.detachLeavesOfType(s)}activateView(){return n(this,void 0,void 0,function*(){let e=this.app.workspace.getLeavesOfType(s)[0];e||(e=this.app.workspace.getLeaf(!1)),e?(yield e.setViewState({type:s,active:!0}),this.app.workspace.revealLeaf(e)):new i.Notice("Could not open RAG Chat panel.")})}loadSettings(){return n(this,void 0,void 0,function*(){this.settings=Object.assign({},o,yield this.loadData())})}saveSettings(){return n(this,void 0,void 0,function*(){yield this.saveData(this.settings)})}refreshModelOptions(){return n(this,void 0,void 0,function*(){const{ollamaUrl:e}=this.settings,{llmModels:t,embeddingModels:i}=yield function(e){return n(this,void 0,void 0,function*(){var t,i;try{const n=yield fetch(`${e}/api/tags`);if(!n.ok)throw new Error(`HTTP error ${n.status}`);const s=null!==(i=null===(t=(yield n.json()).models)||void 0===t?void 0:t.map(e=>e.model))&&void 0!==i?i:[],o=s.filter(e=>e.toLowerCase().includes("embed"));return{llmModels:s.filter(e=>!e.toLowerCase().includes("embed")),embeddingModels:o}}catch(e){return console.warn("Failed to fetch Ollama models:",e),{llmModels:[],embeddingModels:[]}}})}(e);this.settings.llmOptions=t,this.settings.embeddingOptions=i,this.settings.llmOptions.includes(this.settings.llmModel)||(this.settings.llmModel=this.settings.llmOptions[0]||""),this.settings.embeddingOptions.includes(this.settings.embeddingModel)||(this.settings.embeddingModel=this.settings.embeddingOptions[0]||""),yield this.saveSettings()})}searchNotes(e){return n(this,void 0,void 0,function*(){const t=new Set(["what","are","the","is","of","on","to","in","and","or","a","an","for","this","that","with"]),i=e.toLowerCase().split(/\W+/).filter(e=>e&&!t.has(e)),n=this.app.vault.getMarkdownFiles(),s=[];for(const e of n){const t=yield this.app.vault.read(e),n=t.toLowerCase();if(i.some(e=>n.includes(e))){let o=-1;for(const e of i){const t=n.indexOf(e);-1!==t&&(-1===o||t<o)&&(o=t)}const r=t.slice(Math.max(0,o-50),o+150).replace(/\n+/g," ");s.push({file:e,snippet:r})}}return s})}}function a(e){const t=e.indexOf("{"),i=e.lastIndexOf("}");if(-1===t||-1===i)throw new Error("Invalid response: JSON object not found.");const n=e.slice(t,i+1);try{return JSON.parse(n)}catch(e){throw console.error("Failed to parse Ollama JSON extract:",n),new Error("Ollama response could not be parsed as JSON.")}}class l extends i.ItemView{constructor(e,t){super(e),this.isProcessing=!1,this.plugin=t}getViewType(){return s}getDisplayText(){return"RAG Chat"}getIcon(){return"message-square"}onOpen(){return n(this,void 0,void 0,function*(){const e=this.containerEl;e.empty(),e.setAttr("style","height: 100%; width: 100%; min-width: 200px; display: flex; flex-direction: column; overflow: hidden;");const t=e.createDiv("rag-chat-outer");t.setAttr("style","display: flex; flex-direction: column; flex: 1 1 0; height: 100%; width: 100%; background: var(--background-primary);"),this.chatContainer=t.createDiv("rag-chat-messages"),this.chatContainer.setAttr("style","flex: 1 1 auto; overflow-y: auto; border: 1px solid var(--divider-color); padding: 16px 16px 80px 16px; box-sizing: border-box; border-radius: 8px 8px 0 0;background-color: var(--background-modifier-hover); font-size: 15px; min-height: 0; width: 100%;");const i=t.createDiv();i.setAttr("style","display: flex; flex-shrink: 0; gap: 8px; align-items: stretch;width: 100%; box-sizing: border-box; padding: 12px; background: var(--background-primary); border-top: 1px solid var(--divider-color);transform: translateY(-5%);"),this.inputEl=i.createEl("textarea",{placeholder:"Ask a question..."}),this.inputEl.setAttr("rows","1"),this.inputEl.setAttr("style","flex: 1 1 0; min-width: 0; resize: none; max-height: 120px;padding: 10px 12px; font-size: 15px; border-radius: 6px;border: 1px solid var(--interactive-accent); overflow-y: auto;font-family: var(--font-monospace); color: var(--text-normal); box-sizing: border-box;"),this.inputEl.addEventListener("input",()=>{this.inputEl.style.height="auto",this.inputEl.style.height=Math.min(this.inputEl.scrollHeight,120)+"px",this.inputEl.style.overflowY=this.inputEl.scrollHeight>120?"auto":"hidden"}),this.inputEl.addEventListener("keydown",e=>{"Enter"!==e.key||e.shiftKey||(e.preventDefault(),this.handleSubmit())});const n=i.createEl("button",{text:"Send"});n.setAttr("style","\n      flex-shrink: 0;\n      height: 100%;\n      padding: 0 18px;\n      border-radius: 6px;\n      border: none;\n      background-color: var(--interactive-accent);\n      color: var(--text-on-interactive-accent);\n      font-weight: 600;\n      font-size: 15px;\n      cursor: pointer;\n      transition: background-color 0.2s;\n      user-select: none;\n      min-width: 64px;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    "),n.onmouseenter=()=>{n.style.backgroundColor="var(--interactive-accent-pressed)"},n.onmouseleave=()=>{n.style.backgroundColor="var(--interactive-accent)"},n.onclick=()=>this.handleSubmit()})}addMessage(e,t){const i=this.chatContainer.createDiv();i.setAttr("style",`margin-bottom: 14px; padding: 14px 20px; border-radius: 10px; white-space: pre-wrap; word-break: break-word; user-select: text;width: 100%; box-sizing: border-box; font-size: 15px; line-height: 1.45;color: var(--text-normal); background-color: ${"user"===e?"var(--background-primary)":"var(--background-secondary-alt)"}; border: 1px solid var(--divider-color);align-self: ${"user"===e?"flex-end":"flex-start"};`),i.createSpan({text:t}),this.chatContainer.scrollTop=this.chatContainer.scrollHeight}approximateTokenCount(e){return e.trim().split(/\s+/).length}buildContextWithTokenLimit(e){let t=0;const i=[];for(const n of e){const e=this.approximateTokenCount(n.snippet)+20;if(t+e>this.plugin.settings.maxContextTokens)break;t+=e,i.push(`File: ${n.file.basename}\n${n.snippet}`)}return i.join("\n\n")}handleSubmit(){return n(this,void 0,void 0,function*(){var e,t;if(this.isProcessing)return;const i=this.inputEl.value.trim();if(i){this.addMessage("user",i),this.inputEl.value="",this.inputEl.style.height="auto",this.isProcessing=!0;try{const t=yield this.plugin.searchNotes(i);if(0===t.length)return this.addMessage("rag","no matching notes found."),void(this.isProcessing=!1);this.addMessage("rag","generating response...");const s=yield function(e,t){return n(this,void 0,void 0,function*(){var i;const n=yield fetch(`${t.settings.ollamaUrl}/api/embed`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({model:t.settings.embeddingModel,input:e})}),s=a(yield n.text());return s.embedding||(null===(i=s.embeddings)||void 0===i?void 0:i[0])})}(i,this.plugin),o=t.map(e=>e.snippet),r=yield function(e,t){return n(this,void 0,void 0,function*(){const i=yield fetch(`${t.settings.ollamaUrl}/api/embed`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({model:t.settings.embeddingModel,input:e})}),n=a(yield i.text());if(!Array.isArray(n.embeddings))throw new Error("Expected 'embeddings' to be an array.");return n.embeddings})}(o,this.plugin),l=t.map((e,t)=>{return Object.assign(Object.assign({},e),{sim:(i=s,n=r[t],i.reduce((e,t,i)=>e+t*n[i],0)/(Math.sqrt(i.reduce((e,t)=>e+t*t,0))*Math.sqrt(n.reduce((e,t)=>e+t*t,0))+1e-8))});var i,n}).sort((e,t)=>t.sim-e.sim),d=this.buildContextWithTokenLimit(l),h=yield function(e,t,i){return n(this,void 0,void 0,function*(){var n;const s=yield fetch(`${i.settings.ollamaUrl}/api/chat`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({model:i.settings.llmModel,stream:!1,messages:[{role:"system",content:"You are a collaborator for an Obsidian vault. Your primary task is to retrieve and summarize only what is present in the context provided. Do not speculate or invent information. When suitable, after a summary, connect related ideas or challenge thinking with thoughtful questions—but always base these on the context. Clearly separate factual summarization from creative insights or questions."},{role:"user",content:`Context:\n${e}\n\nQuery: ${t}`}]})}),o=a(yield s.text());return(null===(n=o.message)||void 0===n?void 0:n.content)||o.response||"[no response]"})}(d,i,this.plugin);null===(e=this.chatContainer.lastChild)||void 0===e||e.remove(),this.addMessage("rag",h.trim())}catch(e){null===(t=this.chatContainer.lastChild)||void 0===t||t.remove(),this.addMessage("rag",`❌ Error: ${String(e.message||e)}`)}finally{this.isProcessing=!1}}})}onClose(){return n(this,void 0,void 0,function*(){})}}class d extends i.PluginSettingTab{constructor(e,t){super(e,t),this.plugin=t}display(){return n(this,void 0,void 0,function*(){const{containerEl:e}=this;e.empty(),e.createEl("h2",{text:"RAG Chat Plugin Settings"}),new i.Setting(e).setName("Ollama URL").setDesc("Base URL for your Ollama server.").addText(e=>e.setPlaceholder("http://localhost:11434").setValue(this.plugin.settings.ollamaUrl).onChange(e=>n(this,void 0,void 0,function*(){this.plugin.settings.ollamaUrl=e.trim(),yield this.plugin.saveSettings(),yield this.plugin.refreshModelOptions(),this.display()}))),new i.Setting(e).setName("Embedding Model").setDesc("Model for embeddings. Refresh the model list if you add new models.").addDropdown(e=>{if(0===this.plugin.settings.embeddingOptions.length)return e.addOption("","-- No embedding models found --"),void e.setDisabled(!0);this.plugin.settings.embeddingOptions.forEach(t=>e.addOption(t,t)),e.setValue(this.plugin.settings.embeddingModel||""),e.onChange(e=>n(this,void 0,void 0,function*(){this.plugin.settings.embeddingModel=e,yield this.plugin.saveSettings()}))}),new i.Setting(e).setName("LLM Model").setDesc("Language model for answering.").addDropdown(e=>{if(0===this.plugin.settings.llmOptions.length)return e.addOption("","-- No LLM models found --"),void e.setDisabled(!0);this.plugin.settings.llmOptions.forEach(t=>e.addOption(t,t)),e.setValue(this.plugin.settings.llmModel||""),e.onChange(e=>n(this,void 0,void 0,function*(){this.plugin.settings.llmModel=e,yield this.plugin.saveSettings()}))}),new i.Setting(e).setName("Max Context Tokens").setDesc("How many tokens to send as context to the model (approximate).").addSlider(e=>e.setLimits(256,8192,64).setValue(this.plugin.settings.maxContextTokens).onChange(e=>n(this,void 0,void 0,function*(){this.plugin.settings.maxContextTokens=e,yield this.plugin.saveSettings()})).setDynamicTooltip()),new i.Setting(e).addButton(e=>e.setButtonText("Refresh Model List").setCta().onClick(()=>n(this,void 0,void 0,function*(){e.setButtonText("Refreshing..."),yield this.plugin.refreshModelOptions(),this.display(),e.setButtonText("Refresh Model List")})))})}}var h=exports;for(var c in t)h[c]=t[c];t.__esModule&&Object.defineProperty(h,"__esModule",{value:!0})})();